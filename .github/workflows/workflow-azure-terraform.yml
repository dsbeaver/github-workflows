#name: 'Azure Terraform Pipeline'
#description: 'Azure Terraform generic template '
on:
  
  workflow_call:
    inputs:
      TF_VERSION:
        type: string
        required: true
      TF_ACTIONS_WORKING_DIR:  
        required: true
        type: string
    secrets:
      AZURE_AD_CLIENT_ID: 
        required: true
      AZURE_AD_CLIENT_SECRET: 
        required: true
      AZURE_SUBSCRIPTION_ID: 
        required: true
      AZURE_AD_TENANT_ID: 
        required: true

jobs:
  terraform:
    name: Terraform 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.TF_ACTIONS_WORKING_DIR }} 
        shell: bash
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    steps:
      - uses: actions/checkout@v2  
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version:  ${{ inputs.TF_VERSION }}
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: false 

      - name: Terraform Init
        id: init
        run: terraform init
        continue-on-error: false      

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: false      

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color -out=tfplan && terraform show -no-color tfplan 
        continue-on-error: false      

      - name: add-plan-comment
        id: comment
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
        
            <details><summary>Show Plan</summary>
            
            \`\`\`${process.env.PLAN}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve